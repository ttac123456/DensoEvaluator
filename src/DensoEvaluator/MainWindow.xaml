<Window x:Class="DensoEvaluator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DensoEvaluator"
        mc:Ignorable="d"
        Title="Denso評価画面" Height="470" Width="650" ResizeMode="NoResize" Closing="Window_Closing" Initialized="Window_Initialized" Loaded="Window_Loaded">

    <Window.Resources>
        <!-- 通信設定コンボボックス制御用リソース -->
        <local:ComPortSettingData x:Key="ComPortSetting" />
        <local:BaudrateSettingData x:Key="BaudrateSetting" />
        <local:ParitySettingData x:Key="ParitySetting" />
        <local:DataBitSettingData x:Key="DataBitSetting" />
        <local:StopBitSettingData x:Key="StopBitSetting" />
        <local:FlowControlSettingData x:Key="FlowControlSetting" />
        <local:CommunicationSettingData x:Key="CommunicationSettings" />

        <!-- 整数入力エラー時にツールチップを表示するスタイル。
             TextBoxにエラーがあれば、ToolTipにエラー内容を表示し、背景色をピンクにすることを指定。 -->
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Background" Value="#ffeeff" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid x:Name="groupBox_Main">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <GroupBox x:Name="groupBox_Operation" Header="操作" Grid.Row="0" Grid.Column="0" >
            <Grid x:Name="grid_Operation">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button x:Name="button_MoveFront" Content="Y(+)" Grid.Row="2" Grid.Column="1" Background="Transparent" BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Image Name="image" Source="{StaticResource ImageDeactivatedArrowFront}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImageActivatedArrowFront}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImagePressedArrowFront}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="button_MoveRear"  Grid.Row="0" Grid.Column="1" Background="Transparent" BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Image Name="image" Source="{StaticResource ImageDeactivatedArrowRear}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImageActivatedArrowRear}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImagePressedArrowRear}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="button_MoveLeft"  Grid.Row="1" Grid.Column="0" Background="Transparent" BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Image Name="image" Source="{StaticResource ImageDeactivatedArrowLeft}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImageActivatedArrowLeft}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImagePressedArrowLeft}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="button_MoveRight" Grid.Row="1" Grid.Column="2" Background="Transparent" BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Image Name="image" Source="{StaticResource ImageDeactivatedArrowRight}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImageActivatedArrowRight}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImagePressedArrowRight}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="button_MoveUp"    Grid.Row="0" Grid.Column="3" Background="Transparent" BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Image Name="image" Source="{StaticResource ImageDeactivatedArrowUp}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImageActivatedArrowUp}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImagePressedArrowUp}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="button_MoveDown"  Grid.Row="2" Grid.Column="3" Background="Transparent" BorderBrush="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Image Name="image" Source="{StaticResource ImageDeactivatedArrowDown}" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImageActivatedArrowDown}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="image" Property="Source" Value="{StaticResource ImagePressedArrowDown}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalContentAlignment="Top">Y(-)</Label>
                <Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalContentAlignment="Bottom">Y(+)</Label>
                <Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center">X(+)</Label>
                <Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalContentAlignment="Center">X(-)</Label>
                <Label Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" VerticalContentAlignment="Top">Z(-)</Label>
                <Label Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" VerticalContentAlignment="Bottom">Z(+)</Label>
                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" >
                        <Label   x:Name="label_FB" Content="X:" HorizontalAlignment="Right" />
                        <TextBox x:Name="textBox_FB" Text="123456789" TextWrapping="Wrap" Width="72" HorizontalAlignment="Left" VerticalContentAlignment="Center" TextAlignment="Right"  Background="LightGray" IsReadOnly="true"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" >
                        <Label   x:Name="label_LR" Content="Y:" HorizontalAlignment="Right"/>
                        <TextBox x:Name="textBox_LR" Text="123456789" TextWrapping="Wrap" Width="72" HorizontalAlignment="Left" VerticalContentAlignment="Center" TextAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="2" >
                        <Label   x:Name="label_UD" Content="Z:" HorizontalAlignment="Right"/>
                        <TextBox x:Name="textBox_UD" Text="123456789" TextWrapping="Wrap" Width="72" HorizontalAlignment="Left" VerticalContentAlignment="Center" TextAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </GroupBox>

        <StackPanel Grid.Row="1" Grid.Column="0">
            <GroupBox x:Name="groupBox_PresetPosition" Header="移動位置">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Button x:Name="button_PersetPosition01" Content="00" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition02" Content="01" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition03" Content="02" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition04" Content="03" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition05" Content="04" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition06" Content="05" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition07" Content="06" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition08" Content="07" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Button x:Name="button_PersetPosition09" Content="08" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition10" Content="09" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition11" Content="10" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition12" Content="11" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition13" Content="12" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition14" Content="13" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition15" Content="14" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                        <Button x:Name="button_PersetPosition16" Content="15" Width="30" Height="30" Margin="2" HorizontalAlignment="Right" Background="LemonChiffon" Click="button_PersetPosition_Click"/>
                    </StackPanel>
                    <GroupBox x:Name="groupBox_LoadPosition" Header="位置ロード">
                        <DockPanel LastChildFill="True">
                            <local:PathTextBox x:Name="textBox_SettingCsvPath" Text="PresetPositionSetting.csv" TextAlignment="Left" DockPanel.Dock="Left" Width="240" InputTextChanged="PathTextBox_InputTextChanged"/>
                            <Button x:Name="button_SettingCsvPath"  Content="参照" HorizontalAlignment="Right" DockPanel.Dock="Right" Click="button_SettingCsvPath_Click"/>
                        </DockPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
            <GroupBox x:Name="groupBox_DeviceStatus" Header="デバイスステータス">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBox x:Name="textBox_OtherStatus1" Text="stat1" Width="64" Margin="2" HorizontalAlignment="Right" TextAlignment="Center" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_OtherStatus2" Text="stat2" Width="64" Margin="2" HorizontalAlignment="Right" TextAlignment="Center" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_OtherStatus3" Text="stat3" Width="64" Margin="2" HorizontalAlignment="Right" TextAlignment="Center" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_OtherStatus4" Text="stat4" Width="64" Margin="2" HorizontalAlignment="Right" TextAlignment="Center" Background="LightGray" IsReadOnly="true"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2">
            <GroupBox x:Name="groupBox_CommunicationSetting" Header="接続設定">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label Content="通信ポート:" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right"/>
                    <ComboBox x:Name="comboBox_ComPortSetting" HorizontalContentAlignment="Center" Grid.Row="0" Grid.Column="1" DataContext="{StaticResource ComPortSetting}"
                              ItemsSource="{Binding ComPortEnumNameDictionary, Source={StaticResource CommunicationSettings}}" DisplayMemberPath="Value"
                              SelectedValue="{Binding EnumValueComPort, Mode=TwoWay}" SelectedValuePath="Key" SelectedIndex="0"/>
                    <Label Content="ボーレート:" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right"></Label>
                    <ComboBox x:Name="comboBox_BaudrateSetting" HorizontalContentAlignment="Center" Grid.Row="1" Grid.Column="1" DataContext="{StaticResource BaudrateSetting}"
                              ItemsSource="{Binding BaudrateEnumNameDictionary, Source={StaticResource CommunicationSettings}}" DisplayMemberPath="Value"
                              SelectedValue="{Binding EnumValueBaudrate, Mode=TwoWay}" SelectedValuePath="Key" SelectedIndex="8"/>
                    <Label Content="パリティ:" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right"></Label>
                    <ComboBox x:Name="comboBox_ParitySetting" HorizontalContentAlignment="Center" Grid.Row="2" Grid.Column="1" DataContext="{StaticResource ParitySetting}"
                              ItemsSource="{Binding ParityEnumNameDictionary, Source={StaticResource CommunicationSettings}}" DisplayMemberPath="Value"
                              SelectedValue="{Binding EnumValueParity, Mode=TwoWay}" SelectedValuePath="Key"/>
                    <Label Content="データビット長:" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right"></Label>
                    <ComboBox x:Name="comboBox_DataBitSetting" HorizontalContentAlignment="Center" Grid.Row="3" Grid.Column="1" DataContext="{StaticResource DataBitSetting}"
                              ItemsSource="{Binding DataBitEnumNameDictionary, Source={StaticResource CommunicationSettings}}" DisplayMemberPath="Value"
                              SelectedValue="{Binding EnumValueDataBit, Mode=TwoWay}" SelectedValuePath="Key" SelectedIndex="1"/>
                    <Label Content="ストップビット:" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Right"></Label>
                    <ComboBox x:Name="comboBox_StopBitSetting" HorizontalContentAlignment="Center" Grid.Row="4" Grid.Column="1" DataContext="{StaticResource StopBitSetting}"
                              ItemsSource="{Binding StopBitEnumNameDictionary, Source={StaticResource CommunicationSettings}}" DisplayMemberPath="Value"
                              SelectedValue="{Binding EnumValueStopBit, Mode=TwoWay}" SelectedValuePath="Key"/>
                    <Label Content="フロー制御:" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Right"></Label>
                    <ComboBox x:Name="comboBox_FlowControlSetting" HorizontalContentAlignment="Center" Grid.Row="5" Grid.Column="1" DataContext="{StaticResource FlowControlSetting}"
                              ItemsSource="{Binding FlowControlEnumNameDictionary, Source={StaticResource CommunicationSettings}}" DisplayMemberPath="Value"
                              SelectedValue="{Binding EnumValueFlowControl, Mode=TwoWay}" SelectedValuePath="Key"/>
                </Grid>
            </GroupBox>

            <GroupBox x:Name="groupBox_SpeedSetting" Header="速度設定">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label   x:Name="label_SettingSpeedLow"     Grid.Row="0" Grid.Column="1" Content="Low"  HorizontalAlignment="Center"/>
                    <Label   x:Name="label_SettingSpeedHigh"    Grid.Row="0" Grid.Column="2" Content="High" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_SettingSpeedX"       Grid.Row="1" Grid.Column="0" Content="X"    HorizontalAlignment="Center"/>
                    <TextBox x:Name="textBox_SettingSpeedLowX"  Grid.Row="1" Grid.Column="1" Width="72" Margin="2" TextAlignment="Right" Text="{Binding SpeedLowX,  ValidatesOnDataErrors=True}" TextChanged="textBox_SettingSpeed_TextChanged"/>
                    <TextBox x:Name="textBox_SettingSpeedHighX" Grid.Row="1" Grid.Column="2" Width="72" Margin="2" TextAlignment="Right" Text="{Binding SpeedHighX, ValidatesOnDataErrors=True}" TextChanged="textBox_SettingSpeed_TextChanged"/>
                    <Label   x:Name="label_SettingSpeedY"       Grid.Row="2" Grid.Column="0" Content="Y"    HorizontalAlignment="Center"/>
                    <TextBox x:Name="textBox_SettingSpeedLowY"  Grid.Row="2" Grid.Column="1" Width="72" Margin="2" TextAlignment="Right" Text="{Binding SpeedLowY,  ValidatesOnDataErrors=True}" TextChanged="textBox_SettingSpeed_TextChanged"/>
                    <TextBox x:Name="textBox_SettingSpeedHighY" Grid.Row="2" Grid.Column="2" Width="72" Margin="2" TextAlignment="Right" Text="{Binding SpeedHighY, ValidatesOnDataErrors=True}" TextChanged="textBox_SettingSpeed_TextChanged"/>
                    <Label   x:Name="label_SettingSpeedZ"       Grid.Row="3" Grid.Column="0" Content="Z"    HorizontalAlignment="Center"/>
                    <TextBox x:Name="textBox_SettingSpeedLowZ"  Grid.Row="3" Grid.Column="1" Width="72" Margin="2" TextAlignment="Right" Text="{Binding SpeedLowZ,  ValidatesOnDataErrors=True}" TextChanged="textBox_SettingSpeed_TextChanged"/>
                    <TextBox x:Name="textBox_SettingSpeedHighZ" Grid.Row="3" Grid.Column="2" Width="72" Margin="2" TextAlignment="Right" Text="{Binding SpeedHighZ, ValidatesOnDataErrors=True}" TextChanged="textBox_SettingSpeed_TextChanged"/>
                </Grid>
            </GroupBox>

            <GroupBox x:Name="groupBox_PositionStatus" Header="現在位置ステータス">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label   x:Name="label_Status1" Grid.Row="0" Grid.Column="1" Content="stat1" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_Status2" Grid.Row="0" Grid.Column="2" Content="stat2" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_Status3" Grid.Row="0" Grid.Column="3" Content="stat3" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_Status4" Grid.Row="0" Grid.Column="4" Content="stat4" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_Status5" Grid.Row="0" Grid.Column="5" Content="stat5" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_Status6" Grid.Row="0" Grid.Column="6" Content="stat6" HorizontalAlignment="Center"/>
                    <Label   x:Name="label_PosX"          Grid.Row="1" Grid.Column="0" Content="X"    HorizontalAlignment="Center"/>
                    <TextBox x:Name="textBox_PosXStatus1" Grid.Row="1" Grid.Column="1" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosXStatus2" Grid.Row="1" Grid.Column="2" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosXStatus3" Grid.Row="1" Grid.Column="3" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosXStatus4" Grid.Row="1" Grid.Column="4" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosXStatus5" Grid.Row="1" Grid.Column="5" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosXStatus6" Grid.Row="1" Grid.Column="6" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <Label   x:Name="label_PosY"          Grid.Row="2" Grid.Column="0" Content="Y"    HorizontalAlignment="Center"/>
                    <TextBox x:Name="textBox_PosYStatus1" Grid.Row="2" Grid.Column="1" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosYStatus2" Grid.Row="2" Grid.Column="2" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosYStatus3" Grid.Row="2" Grid.Column="3" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosYStatus4" Grid.Row="2" Grid.Column="4" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosYStatus5" Grid.Row="2" Grid.Column="5" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosYStatus6" Grid.Row="2" Grid.Column="6" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <Label   x:Name="label_PosZ"          Grid.Row="3" Grid.Column="0" Content="Z"    HorizontalAlignment="Center"/>
                    <TextBox x:Name="textBox_PosZStatus1" Grid.Row="3" Grid.Column="1" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosZStatus2" Grid.Row="3" Grid.Column="2" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosZStatus3" Grid.Row="3" Grid.Column="3" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosZStatus4" Grid.Row="3" Grid.Column="4" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosZStatus5" Grid.Row="3" Grid.Column="5" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                    <TextBox x:Name="textBox_PosZStatus6" Grid.Row="3" Grid.Column="6" Text="" TextWrapping="Wrap" TextAlignment="Center" Width="48" Margin="2" HorizontalAlignment="Right" Background="LightGray" IsReadOnly="true"/>
                </Grid>
            </GroupBox>
        </StackPanel>

    </Grid>
</Window>
